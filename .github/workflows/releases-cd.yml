name: Releases CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  build:
    name: Build Kikuri Artifacts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'
      - name: Check out code
        uses: actions/checkout@v3
      - name: Build Kikuri
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go mod download
          go build -o ./bin/kikuri-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/kikuri/main.go
      - name: Rename Windows Binary
        if: ${{ matrix.goos == 'windows' }}
        run: mv ./bin/kikuri-${{ matrix.goos }}-${{ matrix.goarch }} ./bin/kikuri-${{ matrix.goos }}-${{ matrix.goarch }}.exe
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Kikuri
          path: bin/
          retention-days: 1
  deploy:
    name: Deploy to Releases
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Retrieve Kikuri binaries
        uses: actions/download-artifact@v3
        with:
          name: kikuri
          path: bin/
      - name: Inject Version into Changelog
        run: |-
          sed -i "s/\[VERSION\]/$(git describe --tags --abbrev=0)/g" CHANGELOG.md
      - name: Set up Hub
        run: |-
          sudo snap install hub --classic
      - name: Deploy to Releases
        run: |
          export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          hub release create \
            $(ls ./bin -1 | xargs -I % printf '-a ./bin/% ') \
            -F ./CHANGELOG.md \
            $(git describe --tags --abbrev=0)