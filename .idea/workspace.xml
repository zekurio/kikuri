<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="775bd22e-6104-455b-817c-5d2a4c07cafe" name="Changes" comment="🐛 bugfix: fixed building issue for frontend files">
      <change beforePath="$PROJECT_DIR$/.github/workflows/docker-cd.yml" beforeDir="false" afterPath="$PROJECT_DIR$/.github/workflows/docker-cd.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.github/workflows/releases-cd.yml" beforeDir="false" afterPath="$PROJECT_DIR$/.github/workflows/releases-cd.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CHANGELOG.md" beforeDir="false" afterPath="$PROJECT_DIR$/CHANGELOG.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/kikuri/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/kikuri/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/docker-compose.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/config/docker-compose.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/inits/database.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/inits/database.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/inits/discord.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/inits/discord.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/inits/discordoauth.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/inits/discordoauth.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/inits/ken.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/inits/ken.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/inits/scheduler.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/inits/scheduler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/inits/state.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/inits/state.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/inits/webserver.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/inits/webserver.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/listeners/guilds.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/listeners/guilds.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/listeners/memberadd.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/listeners/memberadd.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/listeners/ready.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/listeners/ready.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/listeners/voicestateupdate.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/listeners/voicestateupdate.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/middlewares/disabledcmds.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/middlewares/disabledcmds.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/models/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/models/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/models/vote.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/models/vote.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/database/database.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/database/database.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/database/postgres/postgres.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/database/postgres/postgres.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/database/redis/redis.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/database/redis/redis.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/permissions/permissions.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/permissions/permissions.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/permissions/provider.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/permissions/provider.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/votes/provider.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/votes/provider.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/webserver/auth/accesstokenhandler.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/webserver/auth/accesstokenhandler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/webserver/auth/accesstokenmiddleware.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/webserver/auth/accesstokenmiddleware.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/webserver/auth/handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/webserver/auth/handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/webserver/auth/refreshtokenhandler.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/webserver/auth/refreshtokenhandler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/webserver/auth/refreshtokenrequesthandler.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/webserver/auth/refreshtokenrequesthandler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/webserver/v1/controllers/auth.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/webserver/v1/controllers/auth.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/webserver/v1/controllers/guildsettings.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/webserver/v1/controllers/guildsettings.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/webserver/v1/controllers/invite.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/webserver/v1/controllers/invite.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/webserver/v1/models/models.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/webserver/v1/models/models.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/webserver/v1/router.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/webserver/v1/router.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/webserver/webserver.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/webserver/webserver.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/webserver/wsutil/wsutil.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/webserver/wsutil/wsutil.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/slashcommands/autorole.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/slashcommands/autorole.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/slashcommands/autovoice.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/slashcommands/autovoice.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/slashcommands/guild.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/slashcommands/guild.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/slashcommands/perms.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/slashcommands/perms.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/slashcommands/profile.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/slashcommands/profile.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/slashcommands/vote.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/slashcommands/vote.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/usercommands/about.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/usercommands/about.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/util/permissions.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/util/permissions.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/util/static/static.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/util/static/static.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/util/vote/vote.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/util/vote/vote.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/colorutils/colorutils.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/colorutils/colorutils.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/discordutils/discordutils.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/discordutils/discordutils.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/web/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/web/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/web/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/web/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/web/src/services/store.ts" beforeDir="false" afterPath="$PROJECT_DIR$/web/src/services/store.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/scoop/apps/go/current" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2XXjoh2XSJ7q0OLNJdEAdLVh3sH" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;dev&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/Michael&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;prettierjs.PrettierConfiguration.Package&quot;: &quot;C:\\Users\\Michael\\Repos\\kikuri\\web\\node_modules\\prettier&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
    &quot;ts.external.directory.path&quot;: &quot;C:\\Users\\Michael\\Repos\\kikuri\\web\\node_modules\\typescript\\lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="ReactDesignerToolWindowState">
    <option name="myId2Visible">
      <map>
        <entry key="com.haulmont.rcb.reactComponents" value="false" />
        <entry key="com.haulmont.rcb.reactInspector" value="false" />
        <entry key="com.haulmont.rcb.storybook" value="false" />
      </map>
    </option>
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Michael\Repos\kikuri\internal\models" />
    </key>
  </component>
  <component name="RunManager" selected="npm.Run frontend">
    <configuration name="Run backend" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true">
      <module name="kikuri" />
      <working_directory value="$PROJECT_DIR$" />
      <parameters value="-c ./config/config.toml -debug" />
      <kind value="PACKAGE" />
      <package value="github.com/zekurio/kikuri/cmd/kikuri" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/kikuri/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="Run frontend JavaScript" type="JavascriptDebugType" engineId="f00130c5-8f66-4b52-a0c9-df4b364a2f7c" uri="http://localhost:5173">
      <method v="2" />
    </configuration>
    <configuration name="Run frontend" type="js.build_tools.npm">
      <package-json value="$PROJECT_DIR$/web/package.json" />
      <command value="run" />
      <scripts>
        <script value="dev" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2">
        <option name="LaunchBrowser.Before.Run" browser="37cae5b9-e8b2-4949-9172-aafa37fbc09c" url="http://localhost:5173" withDebugger="true" />
      </method>
    </configuration>
    <configuration name="build" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/web/package.json" />
      <command value="run" />
      <scripts>
        <script value="build" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.Run backend" />
      <item itemvalue="JavaScript Debug.Run frontend JavaScript" />
      <item itemvalue="npm.Run frontend" />
      <item itemvalue="npm.build" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="npm.build" />
        <item itemvalue="Go Build.Run backend" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="working on vote service, webinterface and much more" />
    <MESSAGE value=" bugfix: fixed building issue for frontend files" />
    <option name="LAST_COMMIT_MESSAGE" value=" bugfix: fixed building issue for frontend files" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>