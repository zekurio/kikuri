<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="775bd22e-6104-455b-817c-5d2a4c07cafe" name="Changes" comment="✨ api client for webinterface started">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/listeners/voicestateupdate.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/listeners/voicestateupdate.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/permissions/permissions.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/permissions/permissions.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/permissions/provider.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/permissions/provider.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/webserver/v1/controllers/guildsettings.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/webserver/v1/controllers/guildsettings.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/slashcommands/perms.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/slashcommands/perms.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/slashcommands/profile.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/slashcommands/profile.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
        <option value="TypeScript JSX File" />
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/scoop/apps/go/current" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;zekurio&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="2602f346-2b68-4954-9a8c-2436fa80f2c9" />
        <option name="url" value="git@github.com:zekurio/kikuri.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2XXjoh2XSJ7q0OLNJdEAdLVh3sH" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;deletionFromPopupRequiresConfirmation&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;dev&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/Michael/Repos/kikuri&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;prettierjs.PrettierConfiguration.Package&quot;: &quot;C:\\Users\\Michael\\Repos\\kikuri\\web\\node_modules\\prettier&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
    &quot;ts.external.directory.path&quot;: &quot;C:\\Users\\Michael\\Repos\\kikuri\\web\\node_modules\\typescript\\lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ]
  }
}</component>
  <component name="ReactDesignerToolWindowState">
    <option name="myId2Visible">
      <map>
        <entry key="com.haulmont.rcb.reactComponents" value="false" />
        <entry key="com.haulmont.rcb.reactInspector" value="false" />
        <entry key="com.haulmont.rcb.storybook" value="false" />
      </map>
    </option>
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Michael\Repos\kikuri\internal\models" />
      <recent name="C:\Users\Michael\Repos\kikuri\internal\webserver" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.Run backend">
    <configuration name="Run backend" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true">
      <module name="kikuri" />
      <working_directory value="$PROJECT_DIR$" />
      <parameters value="-c ./config/config.toml -debug" />
      <kind value="PACKAGE" />
      <package value="github.com/zekurio/kikuri/cmd/kikuri" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/kikuri/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="Docker compose" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="Run frontend" type="js.build_tools.npm">
      <package-json value="$PROJECT_DIR$/web/package.json" />
      <command value="run" />
      <scripts>
        <script value="dev" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2">
        <option name="LaunchBrowser.Before.Run" url="http://localhost:5173" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Docker.Docker compose" />
      <item itemvalue="Go Build.Run backend" />
      <item itemvalue="npm.Run frontend" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.Run backend" />
        <item itemvalue="Docker.Docker compose" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="working on vote service, webinterface and much more" />
    <MESSAGE value=" bugfix: fixed building issue for frontend files" />
    <MESSAGE value="️ hotfix: fixed some things that were missed by the refactor" />
    <MESSAGE value="✨ votes improved: vote feature got improved, testing now" />
    <MESSAGE value="✨ api client for webinterface started" />
    <option name="LAST_COMMIT_MESSAGE" value="✨ api client for webinterface started" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>